install.packages("XLConnect")
library(XLConnect) # package needed to optimize xlsx import
theData <- readWorksheet(loadWorkbook("Z:\Assessment\Y3 data\munge-y3.xlsx"),sheet=1)
theData <- readWorksheet(loadWorkbook("Z:/Assessment/Y3 data/munge-y3.xlsx"),sheet=1)
install.packages("gdata")
library(gdata) # package needed to optimize xlsx import
library(gdata) # package needed to optimize xlsx import
df = read.xls ("Z:/Assessment/Y3 data/munge-y3.xlsx"), sheet = 1, header = TRUE)
df = read.xls ("Z:/Assessment/Y3 data/munge-y3.xlsx", sheet = 1, header = TRUE)
df = read.xls ("Z:/Assessment/Y3 data/munge-y3.xlsx", sheet = 1, header = TRUE)
df = read.xls ("Z:/Assessment/Y3 data/munge-y3.xlsx"), sheet = 1, header = TRUE)
df = read.xls("Z:/Assessment/Y3 data/munge-y3.xlsx"), sheet = 1, header = TRUE)
df = read.xls(("Z:/Assessment/Y3 data/munge-y3.xlsx"), sheet = 1, header = TRUE)
setwd("Z:/Assessment/Y3 data/")
MyFiles <- list.files(munge-y3.xlsx)
MyFiles <- list.files(munge-y3.xlsx)
MyFiles <- list.files()
library(gdata)
Mylist <- lapply(MyFiles, read.xls)
library(gdata)
Mylist <- lapply(MyFiles, read.xls)
setwd("Z://Assessment/Y3 data/")
MyFiles <- list.files()
Mylist <- lapply(MyFiles, read.xls)
data <- import.csv("Z:/Assessment/Y3 data/munge-y3.csv", header = FALSE, sep = "", quote = "\"'",
dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
as.is = !stringsAsFactors, na.strings = "NA", colClasses = NA, nrows = -1,
skip = 0, check.names = TRUE, fill = !blank.lines.skip,
strip.white = FALSE, blank.lines.skip = TRUE,)
data <- read.csv("Z:/Assessment/Y3 data/munge-y3.csv", header = FALSE, sep = "", quote = "\"'",
dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
as.is = !stringsAsFactors, na.strings = "NA", colClasses = NA, nrows = -1,
skip = 0, check.names = TRUE, fill = !blank.lines.skip,
strip.white = FALSE, blank.lines.skip = TRUE,)
data <- read.csv("Z:/Assessment/Y3 data/munge-y3.csv", header = FALSE, sep = "", quote = "\"'",
dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
as.is = !stringsAsFactors, na.strings = "NA")
data <- read.csv("Z:/Assessment/Y3 data/munge-y3.csv", header = FALSE, sep = "", quote = "\"'",
as.is = !stringsAsFactors, na.strings = "NA")
data <- read.csv("Z:/Assessment/Y3 data/munge-y3.csv", header = FALSE, sep = "", quote = "\"'",
as.is = !stringsAsFactors, na.strings = "NA")
data <- read.csv("Z:/Assessment/Y3 data/munge-y3.csv", header = FALSE, sep = ",", na.strings = "NA")
data <- read.csv("Z:/Assessment/Y3 data/munge-y3.csv", header = TRUE, sep = ",", na.strings = "NA")
data <- read.csv("Z:/Assessment/Y3 data/munge.csv", header = TRUE, sep = ",", na.strings = "NA")
View(data)
ls()
ls()
sr()
ls(data)
str(data)
rise <- read.csv("Z:/Assessment/Y3 data/munge.csv", header = TRUE, sep = ",", na.strings = "NA")
str(rise)
factors <- (SITE, Teacher)
factors <- ls(SITE, Teacher)
factors <- list(SITE, Teacher)
factors <- c(SITE, Teacher)
factors <- c("SITE", "Teacher")
Mylist <- lapply(factors, as.factor)
str(rise) # examine variable types for errors (there ar many)
lapply(factors, as.factor)
lapply(rise$factors, as.factor)
rise <- read.csv("Z:/Assessment/Y3 data/munge.csv", header = TRUE, sep = ",", na.strings = "NA")
str(rise) # examine variable types for errors (there ar many)
factors <- c("SITE", "Teacher")
lapply(factors, as.factor)
attach(rise)
factors <- c("SITE", "Teacher")
lapply(factors, as.factor)
str(rise) # examine variable types for errors (there ar many)
detach(rise)
cols <- c("SITE", "Teacher")
rise[,cols] <- data.frame(apply(rise[cols], 2, as.factor))
str(rise) # examine variable types for errors (there ar many)
ls(rise) # check variables
factors <- c("CCEmp", "CCEmpHr", "CCHPpl", "CCLang",  "CCLangO", "CCRace", "CCRaceO",
"CCReg", "CDOB", "CGender", "ColNum", "EBEmp", "EBEmp1", "EBEng", "EBEngProf",
"EBEthn", "EBFam", "EBFamO", "EBLang", "EBLangO", "EBO",  "EBOIf", "EBOProf",
"EBRace", "EBRaceO", "EBSp")
rise[,factors] <- data.frame(apply(rise[factors], 2, as.factor))
str(rise) # examine variable types for errors (there ar many)
rise <- read.csv("Z:/Assessment/Y3 data/munge.csv", header = TRUE, sep = ",", na.strings = "NA")
str(rise) # examine variable types for errors (there ar many)
ls(rise) # check variables
View(rise)
numeric <- c("NumAdult", "NumChild", "SSaysFall", "AShowFall", "PLTotalFall", "SSaysSp", "AShowSp",
"AgeFallYPL", "CAgeFallLENS",  "CAgeFallYLENS",  "CAgeSpPL",	"CAgeSpYPL", "CAgeSpLENS",
"CAgeSpYLENS", "PLTotalSp", "LENSFall", "LENSSp", "LENSdiff", "LTLSF_1", "LTLSF_2", "LTLSF_3", "LTLSF_4",
"LTLSF_5", "LTLSF_6", "LTLSF_7", "LTLSF_8", "LTLSF_9", "LTLSF_10", "LTLSF_11", "LTLSF_22",
"LTLSF_23", "LTLSF_24", "LTLSF_25", "LTLSF_26", "LTLSF_27", "LTLSF_28",	"LTLSF_29",	"LTLSF_30",
"LTLSF_31", "LTLSF_12", "LTLSF_13", "LTLSF_14", "LTLSSF_15", "LTLSSF_16", "LTLSF_17", "LTLSF_18",
"LTLSF_19", "LTLSF_20", "LTLSF_21", "LTLSF_32", "LTLSF_33", "LTLSF_34",	"LTLSF_35",	"LTLSF_36",
"LTLSF_37", "LTLSF_38", "LTLSF_39", "LTLSF_40", "LTLSF_41", "LTLSF_42")
rise[,numeric] <- data.frame(apply(rise[numeric], 2, as.numeric))
numeric <- c(43:150)
rise[,numeric] <- data.frame(apply(rise[numeric], 2, as.numeric))
str(rise) # examine variable types for errors (there ar many)
ls(rise) # check variables
numeric <- c(43:156, 158:223) # direct calls to column number vs. name
rise[,numeric] <- data.frame(apply(rise[numeric], 2, as.numeric))
rise <- read.csv("Z:/Assessment/Y3 data/munge.csv", header = TRUE, sep = ",", na.strings = "NA")
numeric <- c(43:156, 158:223) # direct calls to column number vs. name
rise[,numeric] <- data.frame(apply(rise[numeric], 2, as.numeric))
str(rise) # examine variable types for errors (there ar many)
ls(rise) # check variables
factors <- c(229, 232)
rise[,factors] <- data.frame(apply(rise[factors], 2, as.factor)) # stream-line and use apply family functions instead of for loops
str(rise) # examine variable types for errors (there ar many)
colnames(rise)
numeric <- c(4:11, 16, 18:19, 50:232) # direct calls to column number vs. name
rise[,numeric] <- data.frame(apply(rise[numeric], 2, as.numeric))
str(rise) # examine variable types for errors (there ar many)
factors <- c(2:3, 12, 14:15, 16)
rise[,factors] <- data.frame(apply(rise[factors], 2, as.factor)) # stream-line and use apply family functions instead of for loops
str(rise) # examine variable types for errors (there ar many)
str(rise)
rise <- read.csv("munge.csv", header = TRUE, sep = ",", na.strings = "NA")
str(rise)
rise <- read.csv("munge.csv", header = TRUE, sep = ",", na.strings = "NA")
str(rise)
rise <- read.csv("munge.csv", header = TRUE, sep = ",", na.strings = "NA")
colnames(rise) # check variables and see the column number for each variable
str(rise) # examine variable types for errors (there ar many)
# trying to keep code DRY with the 'apply' family of functions
factors <- c(2:3, 12, 14:15, 16) # these are references to column numbers
rise[,factors] <- data.frame(apply(rise[factors], 2, as.factor)) # stream-line and use apply family functions instead of for loops
numeric <- c(4:11, 16, 18:19, 50:232) # direct calls to column number vs. name
rise[,numeric] <- data.frame(apply(rise[numeric], 2, as.numeric))
str(rise) # check again and make sure everything looks correct
data(cars)
library(psych)
install.packages("psych")
library(psych)
describe(cars)
library(dplyr) # for easy
install.packages("gdata")
install.packages("dplyr")
install.packages("lme4")
install.packages("ggplot2")
install.packages("sjPlot")
str(rise) # examine variable types for errors (there ar many)
colnames(rise) # check variables and see the column number for each variable
lens <- select(rise, 56:158)
library(dplyr) # for easy
install.packages("dplyr")
